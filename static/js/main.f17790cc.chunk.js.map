{"version":3,"sources":["Components/Tasks/Task.module.css","Components/Folders/Folders.module.css","Components/Header/Header.module.css","Components/Bin/Bin.module.css","Components/Header/Header.js","Components/Bin/Bin.js","Components/Folders/Folder.js","Components/Folders/Foders.js","redux/ActionTypes.js","Components/Nav/Nav.js","redux/ActionCreators.js","Components/Tasks/Task.js","Components/Tasks/Tasks.js","App.js","reportWebVitals.js","redux/UserReducer.js","redux/ListReducer.js","redux/Redux.js","index.js"],"names":["module","exports","Header","className","classes","header","Bin","bin","icon","faTrash","Folder","active","name","folderId","del","DeleteFolder","SelectFolder","history","useHistory","url","parseInt","location","pathname","split","pop","onClick","to","size","faFolderOpen","faFolder","push","Folders","folders","createFolder","LoadFolders","useState","setFolderId","activeInput","setActiveInput","inputValue","setInputValue","setDel","useEffect","prevState","length","JSON","parse","localStorage","getItem","setItem","stringify","folderGenerator","map","item","Math","random","createFolderHandler","event","target","value","prev","onChange","placeholder","onBlur","onKeyUp","key","type","AddFolder","faFolderPlus","RemoveFolder","faFolderMinus","CREATE_NEW_TASK","CLEAR_ALL","COMPLETE_TASK","CREATE_FOLDER","DELETE_FOLDER","LOAD_ALL_TASKS","LOAD_ALL_FOLDERS","FOLDER_SELECT","DELETE_TASK","connect","state","ListReducer","CreateFolderAC","DeleteFolderAC","LoadFoldersAC","SelectFolderAC","folderID","Task","task","date","CompleteTaskAC","isCompleted","id","DeleteTask","Completed","tasks","CreateTaskAC","time","FolderId","ClearAllAC","LoadTasksAC","DeleteTaskAC","setId","setActive","search","setSearch","taskGenerator","items","createTask","Date","day","getDay","year","getFullYear","dayNum","getDate","month","getMonth","hours","getHours","min","getMinutes","toString","minutes","e","Search","searchedTasks","filter","searched","indexOf","filteredTaskGenerator","inptTask","btnAdd","btnClear","App","path","component","Tasks","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","login","UserReducer","action","reducers","isShown","folder","rootReducer","combineReducers","store","createStore","window","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f17790cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Task_Search__3AWqg\",\"inptTask\":\"Task_inptTask__1K0li\",\"Task\":\"Task_Task__2qXgD\",\"Completed\":\"Task_Completed__j1hzO\",\"btnAdd\":\"Task_btnAdd__1JI5p\",\"btnClear\":\"Task_btnClear__3Lwpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddFolder\":\"Folders_AddFolder__3w8ge\",\"RemoveFolder\":\"Folders_RemoveFolder__leeES\",\"Folder\":\"Folders_Folder__3kQ0I\",\"del\":\"Folders_del__2Z3dq\",\"active\":\"Folders_active__2XgBT\",\"shake\":\"Folders_shake__2tKl2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bin\":\"Bin_bin__41kKA\"};","import classes from './Header.module.css'\nconst Header = () => (\n    <div className={`container text-center ${classes.header}`}>\n        <h1>TODO MANAGER</h1>\n    </div>\n)\nexport default Header","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\"\nimport classes from './Bin.module.css'\n\nconst Bin = () => (\n    <span className={`${classes.bin}`}>\n        <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n    </span>\n)\nexport default Bin","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faFolder, faFolderOpen} from \"@fortawesome/free-solid-svg-icons\";\nimport {NavLink, Redirect, Route, useHistory} from \"react-router-dom\";\nimport classes from './Folders.module.css'\nimport Bin from \"../Bin/Bin\";\nimport {useCallback, useEffect} from \"react\";\n\nconst Folder = ({active, name, folderId, del, DeleteFolder, SelectFolder}) => {\n    const history = useHistory()\n    const url = parseInt(history.location.pathname.split('/').pop())\n    const folderHandler = () => {\n        SelectFolder(folderId)\n    }\n\n    const DeleteFolderHandler = () => {\n        DeleteFolder(folderId)\n        if (folderId === url) {\n            history.push('/tasks/1')\n        }\n    }\n    return (\n        <div className={`m-2 ${classes.Folder}`} onClick={folderHandler}>\n            <NavLink to={`/tasks/${folderId}`}>\n                {active ? <FontAwesomeIcon size=\"lg\" icon={faFolderOpen}/>\n                    : <FontAwesomeIcon size=\"lg\" icon={faFolder}/>}\n                <span className=\"m-2\">{name}</span>\n            </NavLink>\n            {del && folderId !== 1 && <span onClick={DeleteFolderHandler}><Bin/></span>}\n        </div>\n    )\n}\nexport default Folder","import Folder from \"./Folder\"\nimport classes from \"./Folders.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faFolderMinus, faFolderPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {useEffect, useState} from \"react\";\n\nconst Folders = ({folders, createFolder, DeleteFolder, LoadFolders, SelectFolder}) => {\n    const [folderId, setFolderId] = useState(1)\n    const [activeInput, setActiveInput] = useState(false)\n    const [inputValue, setInputValue] = useState('')\n    const [del, setDel] = useState(false)\n    useEffect(() => setFolderId(prevState => prevState + 1), [folders.length])\n    useEffect(() => LoadFolders(JSON.parse(localStorage.getItem('folders'))), [])\n    useEffect(() => localStorage.setItem('folders', JSON.stringify(folders)), [folders])\n\n    const folderGenerator = folders.map(item => {\n        return <Folder DeleteFolder={DeleteFolder}\n                       del={del}\n                       name={item.name}\n                       active={item.active}\n                       folderId={item.folderId}\n                       SelectFolder={SelectFolder}\n                       key={Math.random() + item.name}\n        />\n    })\n    const createFolderHandler = event => {\n        event.target.value && createFolder(folderId ,event.target.value)\n        setActiveInput(prev => !prev)\n        setInputValue('')\n    }\n    const handleKeyUp = event => event.key === 'Enter' && createFolderHandler(event)\n    return <div>\n        {folderGenerator}\n        {activeInput && <input\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n            placeholder=\"Enter folder name\"\n            onBlur={createFolderHandler}\n            onKeyUp={handleKeyUp}\n            type=\"text\"\n        />}\n        <div className=\"editFolders mt-4\">\n            <div className={`m-2 ${classes.AddFolder}`}\n                 onClick={() => setActiveInput(prev => !prev)\n            }>\n                <FontAwesomeIcon icon={faFolderPlus} size='lg'/>\n                <span className=\"m-2\">Add folder</span>\n            </div>\n            <div className={`m-2 ${classes.RemoveFolder} ${del && classes.active}`}\n                 onClick={() => setDel(prev => !prev)}\n            >\n                <FontAwesomeIcon icon={faFolderMinus} size='lg'/>\n                <span className=\"m-2\">Remove folder</span>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Folders","export const CREATE_NEW_TASK = 'CREATE_NEW_TASK'\nexport const CLEAR_ALL = 'CLEAR_ALL'\nexport const COMPLETE_TASK = 'COMPLETE_TASK'\nexport const CREATE_FOLDER = 'CREATE_FOLDER'\nexport const DELETE_FOLDER = 'DELETE_FOLDER'\nexport const LOAD_ALL_TASKS = 'LOAD_ALL_TASKS'\nexport const LOAD_ALL_FOLDERS = 'LOAD_ALL_FOLDERS'\nexport const FOLDER_SELECT = 'FOLDER_SELECT'\nexport const DELETE_TASK = 'DELETE_TASK'","import {connect} from \"react-redux\";\nimport Folders from \"../Folders/Foders\";\nimport {CreateFolderAC, DeleteFolderAC, LoadFoldersAC, SelectFolderAC} from \"../../redux/ActionCreators\";\n\nconst Nav = ({folders, CreateFolderAC, DeleteFolderAC, LoadFoldersAC, SelectFolderAC}) => {\n    return (\n        <div className=\"mt-5 h-100 flex-column\">\n            <div className=\"flex-grow-1\">\n            <Folders DeleteFolder={DeleteFolderAC}\n                     folders={folders}\n                     createFolder={CreateFolderAC}\n                     LoadFolders={LoadFoldersAC}\n                     SelectFolder={SelectFolderAC}\n            />\n            </div>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    folders: state.ListReducer.folders\n})\nexport default connect(mapStateToProps,\n    {CreateFolderAC, DeleteFolderAC, LoadFoldersAC, SelectFolderAC})(Nav)","import {\n    CLEAR_ALL,\n    COMPLETE_TASK,\n    CREATE_FOLDER,\n    CREATE_NEW_TASK,\n    DELETE_FOLDER, DELETE_TASK, FOLDER_SELECT, LOAD_ALL_FOLDERS,\n    LOAD_ALL_TASKS\n} from \"./ActionTypes\";\n\nexport const CreateTaskAC = (task, time, FolderId, id) => ({\n    type: CREATE_NEW_TASK,\n    task,\n    time,\n    FolderId,\n    id\n})\nexport const ClearAllAC = () => ({\n    type: CLEAR_ALL\n})\nexport const CompleteTaskAC = (id) => ({\n    type: COMPLETE_TASK,\n    id\n})\nexport const CreateFolderAC = (folderId, name) => ({\n    type: CREATE_FOLDER,\n    folderId,\n    name\n})\nexport const DeleteFolderAC = (folderId) => ({\n    type: DELETE_FOLDER,\n    folderId\n})\nexport const LoadTasksAC = tasks => ({\n    type: LOAD_ALL_TASKS,\n    tasks\n})\nexport const LoadFoldersAC = folders => ({\n    type: LOAD_ALL_FOLDERS,\n    folders\n})\nexport const SelectFolderAC = folderID => ({\n    type: FOLDER_SELECT,\n    folderID\n})\nexport const DeleteTaskAC = id => ({\n    type: DELETE_TASK,\n    id\n})","import classes from './Task.module.css'\nimport Bin from \"../Bin/Bin\";\n\nconst Task = ({task, date, CompleteTaskAC, isCompleted, id, DeleteTask}) => {\n    return (\n        <div\n            onClick={() => CompleteTaskAC(id)}\n            className={` ${classes.Task} ${isCompleted && classes.Completed}`}\n        >\n            <div className=\"row justify-content-between\">\n                <div className=\"col-auto p-0\">{task}</div>\n                <div className=\"col-auto p-0\">\n                    <span>{date}</span>\n                    <span onClick={() => DeleteTask(id)} className=\"m-2\"><Bin/></span>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Task","import {connect} from \"react-redux\";\nimport Task from \"./Task\";\nimport {ClearAllAC, CompleteTaskAC, CreateTaskAC, DeleteTaskAC, LoadTasksAC} from \"../../redux/ActionCreators\";\nimport {useEffect, useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from './Task.module.css'\n\n\nconst Tasks = ({tasks, CreateTaskAC, ClearAllAC, CompleteTaskAC, LoadTasksAC, DeleteTaskAC}) => {\n    const [id, setId] = useState(1)\n    const [active, setActive] = useState(false)\n    const [search, setSearch] = useState('')\n    const folderId = parseInt(useHistory().location.pathname.split('/').pop())\n    useEffect(() => setId(prevState => prevState + 1), [tasks.length])\n    useEffect(() => LoadTasksAC(JSON.parse(localStorage.getItem('tasks'))), [])\n    useEffect(() => localStorage.setItem('tasks', JSON.stringify(tasks)), [tasks])\n    const taskGenerator = (items) => items.map(item => {\n        if(item.task && item.FolderId === folderId) return <Task\n            id={item.id}\n            CompleteTaskAC={CompleteTaskAC}\n            key={Math.random()}\n            date={item.time}\n            task={item.task}\n            isCompleted={item.isCompleted}\n            DeleteTask={DeleteTaskAC}\n        />\n    })\n\n    const filteredTaskGenerator = () => {\n        if (search) {\n            const searchedTasks = tasks.filter(searched => {\n                return searched.task.indexOf(search) === 0\n            })\n            return taskGenerator(searchedTasks)\n        }\n        return taskGenerator(tasks)\n    }\n\n    const createTask = (event) => {\n        const days = ['Sun', 'Mon', 'Tue', 'Wen', 'Thu', 'Fri', 'Sat']\n        const months = ['January', 'February', 'March', 'April ', 'May', 'June', 'July',\n            'August', 'September', 'October', 'November', 'December']\n        const time = new Date()\n        let day = time.getDay()\n        const year = time.getFullYear()\n        const dayNum = time.getDate()\n        const month = time.getMonth()\n        const hours = time.getHours()\n        const minutes = () => {\n            const min = time.getMinutes()\n            if (min.toString().length === 1) {\n                return '0' + min\n            }\n            return min\n        }\n        event.target.value && CreateTaskAC(event.target.value,\n            `${hours}:${minutes()} ${days[day]}, ${dayNum} ${months[month]} ${year}`, folderId, id)\n        setActive(prev => !prev)\n        event.target.value = ''\n    }\n    const handleKeyUp = event => event.key === 'Enter' && createTask(event)\n\n    return (\n        <div>\n            <h3 className={'text-center mt-4'}>ALL TASKS</h3>\n            <hr/>\n            {id > 1 && <input\n                type=\"text\"\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n                placeholder='Search'\n                className={classes.Search}\n            />}\n            <div className={`d-flex flex-column justify-content-around `}>\n                {filteredTaskGenerator()}\n            </div>\n            {active && <div>\n                <input type=\"text\"\n                       placeholder='Enter task'\n                       onBlur={createTask}\n                       onKeyUp={handleKeyUp}\n                       className={classes.inptTask}\n                />\n            </div>}\n            <div>\n                <div className=\"row m-0 mb-5\">\n                    <button className={`col-xs-12 col-6 ${classes.btnAdd}`} onClick={() => setActive(prev => !prev)}>\n                        Add new\n                    </button>\n                    <button className={`col-xs-12 col-6 ${classes.btnClear}`} onClick={ClearAllAC}>Clear all</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    tasks: state.ListReducer.tasks\n})\nexport default connect(mapStateToProps,\n    {CreateTaskAC, ClearAllAC, CompleteTaskAC, LoadTasksAC, DeleteTaskAC})(Tasks)","import './App.css'\nimport Header from \"./Components/Header/Header\";\nimport Nav from \"./Components/Nav/Nav\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <Header/>\n                <div className=\"row p-0 m-0 container\">\n                    <div className=\"col-12 col-sm-4 row__block-left\">\n                        <Nav/>\n                    </div>\n                    <div className=\"col-12 col-sm-8 row__block-right\">\n                        <Switch>\n                            <Route path=\"/tasks/:folderId?\" component={Tasks}/>\n                            <Route exact path=\"/\">\n                                <Redirect to=\"/tasks/1\"/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    login: 'defaultName',\n}\nconst UserReducer = (state = initialState, action) => {\n    switch (action.type) {\n        default: return state\n    }\n}\nexport default UserReducer","import {\n    CLEAR_ALL,\n    COMPLETE_TASK,\n    CREATE_FOLDER,\n    CREATE_NEW_TASK,\n    DELETE_FOLDER, DELETE_TASK, FOLDER_SELECT, LOAD_ALL_FOLDERS,\n    LOAD_ALL_TASKS\n} from \"./ActionTypes\";\n\nconst initialState = {\n    tasks: [\n        // {\n        //     task: null,\n        //     time: null,\n        //     isCompleted: null,\n        //     isShown: null,\n        //     id: null,\n        //     FolderId: null\n        // }\n    ],\n    folders: [\n        {\n            name: 'Main',\n            folderId: 1,\n            active: true\n        }\n    ]\n}\n\n\nconst UserReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_NEW_TASK: {\n            return {\n                ...state,\n                tasks: [\n                    ...state.tasks,\n                    {\n                        task: action.task,\n                        time: action.time,\n                        isCompleted: false,\n                        isShown: true,\n                        FolderId: action.FolderId,\n                        id: action.id\n                    }\n                ]\n            }\n        }\n        case LOAD_ALL_TASKS: {\n            return {\n                ...state,\n                tasks: action.tasks\n            }\n        }\n        case CLEAR_ALL: {\n            return {\n                ...state,\n                tasks: []\n            }\n        }\n\n        case COMPLETE_TASK: {\n            return {\n                ...state,\n                tasks: state.tasks.map(task => {\n                    if (task.id === action.id) return {...task, isCompleted: !task.isCompleted}\n                    else return {...task}\n                })\n            }\n        }\n        case CREATE_FOLDER: {\n            return {\n                ...state,\n                folders: [\n                    ...state.folders,\n                    {\n                        name: action.name,\n                        folderId: action.folderId\n                    }\n                ]\n            }\n        }\n        case LOAD_ALL_FOLDERS: {\n            return {\n                ...state,\n                folders: action.folders\n            }\n        }\n        case DELETE_FOLDER: {\n            return {\n                ...state,\n                folders: state.folders.filter(item => {\n                    return item.folderId !== action.folderId || item.folderId === 1\n                }),\n                tasks: state.tasks.filter(task => {\n                    return task.FolderId !== action.folderId\n                })\n            }\n        }\n        case DELETE_TASK: {\n            return {\n                ...state,\n                tasks: state.tasks.filter(task => task.id !== action.id)\n            }\n        }\n        case FOLDER_SELECT: {\n            return {\n                ...state,\n                folders: state.folders.map(folder => folder.folderId === action.folderID ?\n                    {...folder, active: true} : {...folder, active: false}\n                )\n            }\n        }\n        default:\n            return state\n    }\n}\nexport default UserReducer","import {combineReducers, createStore} from \"redux\";\nimport UserReducer from \"./UserReducer\";\nimport ListReducer from \"./ListReducer\";\nconst reducers = {\n    UserReducer,\n    ListReducer\n}\nconst rootReducer = combineReducers(reducers)\nconst store = createStore(rootReducer)\nwindow.store= store\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter} from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {Provider} from \"react-redux\"\nimport store from './redux/Redux'\n\n\nconst app = (\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\nreportWebVitals();\n"],"sourceRoot":""}